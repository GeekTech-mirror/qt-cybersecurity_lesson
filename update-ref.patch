diff --git a/Cybersecurity_Lesson/models/station_model/CMakeLists.txt b/Cybersecurity_Lesson/models/station_model/CMakeLists.txt
index 81b3253..2c5c550 100644
--- a/Cybersecurity_Lesson/models/station_model/CMakeLists.txt
+++ b/Cybersecurity_Lesson/models/station_model/CMakeLists.txt
@@ -1,5 +1,6 @@
 set(STATION_MODEL_SRCS
-    station_enums.h
+    pcap_common.h
+    station_common.h
     station_model.cpp
     station_model.h
     station_model_p.h
diff --git a/Cybersecurity_Lesson/models/station_model/station_enums.h b/Cybersecurity_Lesson/models/station_model/station_enums.h
deleted file mode 100644
index c7ce032..0000000
--- a/Cybersecurity_Lesson/models/station_model/station_enums.h
+++ /dev/null
@@ -1,92 +0,0 @@
-#ifndef STATION_ENUMS_H
-#define STATION_ENUMS_H
-
-#include <QObject>
-#include <QByteArray>
-
-enum StationItemRole {
-    StationRole = Qt::UserRole + 1,
-    InterfaceRole,
-    AccessPointRole,
-};
-
-/* IEEE 802.11 wireless LAN protocol filters */
-/* definitions */
-/* FC: Frame Control Byte */
-/* DIR: Direction */
-/* TO/FROM DS: To/From Distribution System */
-#define IEEE80211_FRAME_LEN 24
-
-/* Traffic direction */
-/*
- * DS bit usage
- *
- * TA = transmitter address
- * RA = receiver address
- * DA = destination address
- * SA = source address
- *
- * ToDS    FromDS  A1(RA)  A2(TA)  A3      A4      Use
- * -----------------------------------------------------------------
- *  0       0       DA      SA      BSSID   -       IBSS/DLS
- *  0       1       DA      BSSID   SA      -       AP -> STA
- *  1       0       BSSID   SA      DA      -       AP <- STA
- *  1       1       RA      TA      DA      SA      unspecified (WDS)
- */
-#define	IEEE80211_FC1_DIR_MASK			0x03
-#define	IEEE80211_FC1_DIR_NODS			0x00	/* STA->STA */
-#define	IEEE80211_FC1_DIR_TODS			0x01	/* STA->AP  */
-#define	IEEE80211_FC1_DIR_FROMDS		0x02	/* AP ->STA */
-#define	IEEE80211_FC1_DIR_DSTODS		0x03	/* AP ->AP  */
-
-/* Probe types */
-#define	IEEE80211_FC0_TYPE_MASK			0x0c
-#define	IEEE80211_FC0_TYPE_SHIFT		2
-#define	IEEE80211_FC0_TYPE_MGT			0x00
-#define	IEEE80211_FC0_TYPE_CTL			0x04
-#define	IEEE80211_FC0_TYPE_DATA			0x08
-
-/* Probe subtypes */
-#define	IEEE80211_FC0_SUBTYPE_ASSOC_REQ		0x00
-#define	IEEE80211_FC0_SUBTYPE_ASSOC_RESP	0x10
-#define	IEEE80211_FC0_SUBTYPE_REASSOC_REQ	0x20
-#define	IEEE80211_FC0_SUBTYPE_REASSOC_RESP	0x30
-#define	IEEE80211_FC0_SUBTYPE_PROBE_REQ		0x40    /* STA->AP  */
-#define	IEEE80211_FC0_SUBTYPE_PROBE_RESP	0x50    /* AP ->STA */
-#define	IEEE80211_FC0_SUBTYPE_BEACON		0x80
-#define	IEEE80211_FC0_SUBTYPE_ATIM          0x90
-#define	IEEE80211_FC0_SUBTYPE_DISASSOC		0xa0
-#define	IEEE80211_FC0_SUBTYPE_AUTH          0xb0
-#define	IEEE80211_FC0_SUBTYPE_DEAUTH		0xc0
-
-/* Frame locations */
-// location of radiotap header length
-#define RADIOTAP_HDR_LEN_LOC    0x02
-
-/* Tag properties */
-#define TAG_PARAM_SSID          0x00
-
-/* Data properties */
-#define ESSID_LEN 32 /* The spec. says 32 maximum. */
-
-// returns the raw uchar* from a QByteArray at the position pos
-#define BYTE_TO_UCHAR(arr,pos) \
-    *reinterpret_cast<uchar*>(arr.sliced(pos,1).data())
-
-enum TagSearch {
-    Error,
-    TagNotFound,
-    TagFound
-};
-
-
-/* oui struct for list management */
-struct oui
-{
-    QString id[9]; /* TODO: Don't use ASCII chars to compare, use unsigned char[3]
-                   (later) with the value (hex ascii will have to be converted)
-                   */
-    QString manuf[128]; /* TODO: Switch to a char * later to improve memory usage */
-};
-
-#endif // STATION_ENUMS_H
diff --git a/Cybersecurity_Lesson/models/station_model/station_item.cpp b/Cybersecurity_Lesson/models/station_model/station_item.cpp
index 7284818..ad174bb 100644
--- a/Cybersecurity_Lesson/models/station_model/station_item.cpp
+++ b/Cybersecurity_Lesson/models/station_model/station_item.cpp
@@ -1,7 +1,7 @@
 #include <NetworkManagerQt/WirelessDevice>
 
 #include "station_item.h"
-#include "station_enums.h"
+#include "station_common.h"
 
 StationItem::StationItem(StationItem *parent)
     : m_parentItem(parent)
diff --git a/Cybersecurity_Lesson/models/station_model/station_item.h b/Cybersecurity_Lesson/models/station_model/station_item.h
index 7f92ed2..c8de444 100644
--- a/Cybersecurity_Lesson/models/station_model/station_item.h
+++ b/Cybersecurity_Lesson/models/station_model/station_item.h
@@ -1,7 +1,7 @@
 #ifndef STATIONITEM_H
 #define STATIONITEM_H
 
-#include "station_enums.h"
+#include "station_common.h"
 
 class StationItem : public QObject
 {
diff --git a/Cybersecurity_Lesson/models/station_model/station_model.cpp b/Cybersecurity_Lesson/models/station_model/station_model.cpp
index d79f27d..4f6dc6e 100644
--- a/Cybersecurity_Lesson/models/station_model/station_model.cpp
+++ b/Cybersecurity_Lesson/models/station_model/station_model.cpp
@@ -6,6 +6,7 @@
 #include "station_model.h"
 #include "station_model_p.h"
 #include "station_item.h"
+#include "pcap_common.h"
 
 #include "pcap.h"
 #include "custom_colors.h"
@@ -15,7 +16,8 @@
 
 StationModel::StationModel (QObject *parent)
     : QAbstractItemModel (parent),
-      m_pcapThread (new QThread(this))
+      m_pcapThread (new QThread(this)),
+      m_apInfo (QVector<ap_info*>())
 {
     rootItem = new StationItem ();
 
@@ -334,7 +336,7 @@ void StationModel::create_pcapThread (pcap_t *handle)
 
                 // filtering packets subtype for debugging
                 static int i = 0;
-                if ((uchar)packet->at(0) == IEEE80211_FC0_SUBTYPE_PROBE_REQ)
+                if ((uchar)packet->at(0) == IEEE80211_FC0_SUBTYPE_PROBE_RESP)
                 {
                     qDebug() << "capture length" << packet_header->caplen;
 
@@ -353,10 +355,40 @@ void StationModel::create_pcapThread (pcap_t *handle)
     m_pcapThread->start();
 }
 
+bool StationModel::addAccessPoint (const ap_info ap_cur)
+{
+    if (m_apInfo.contains(ap_cur))
+    {
+        return false;
+    }
+
+    //m_apInfo.append(ap_cur);
+
+    //find manufacturer
+
+    for (ap_info *ap : m_apInfo)
+    {
+        if (ap_cur.essid.isEmpty())
+        {
+            return false;
+        }
+
+    }
+    //if (!m_apInfo.contains(bssid))
+    //{
+    //    m_accessPoint.append(bssid);
+
+        //find manufacturer
+    //}
+    return false;
+}
 
 void StationModel::filterPacket (const uchar *pk_data, const QByteArray &packet)
 {
     QByteArray stmac;
+
+    ap_info ap_cur;
+
     QByteArray bssid;
     QByteArray essid;
 
@@ -453,13 +485,6 @@ void StationModel::filterPacket (const uchar *pk_data, const QByteArray &packet)
             return;
     }
 
-    if (!m_accessPoint.contains(bssid))
-    {
-        m_accessPoint.append(bssid);
-
-        //find manufacturer
-    }
-
 
     /* Probe Request: ST -> AP */
     if (packet.at(0) == IEEE80211_FC0_SUBTYPE_PROBE_REQ
@@ -481,6 +506,9 @@ void StationModel::filterPacket (const uchar *pk_data, const QByteArray &packet)
         return;
     }
 
+/////////////////////// Insert into model /////////////////
+
+
 
 //////////////////////// DEBUGGING ////////////////////////
 
diff --git a/Cybersecurity_Lesson/models/station_model/station_model.h b/Cybersecurity_Lesson/models/station_model/station_model.h
index e4f8ea9..1cdd308 100644
--- a/Cybersecurity_Lesson/models/station_model/station_model.h
+++ b/Cybersecurity_Lesson/models/station_model/station_model.h
@@ -10,8 +10,9 @@
 #include "pcap.h"
 
 #include "iface_model.h"
+#include "pcap_common.h"
 
-#include "station_enums.h"
+#include "station_common.h"
 #include "station_item.h"
 
 class StationModelPrivate;
@@ -69,7 +70,7 @@ private Q_SLOT:
 private:
     StationItem *rootItem;
     QVector<StationItemRole> columnRoles;
-    QVector<QByteArray> m_accessPoint;
+    QVector<ap_info*> m_apInfo;
 
     QThread *m_pcapThread;
 
@@ -81,6 +82,8 @@ private:
     // LLC null packet
     const QByteArray llcnull = QByteArray(4, 0);
 
+    bool addAccessPoint(const ap_info ap_cur);
+
     bool probe_request(const QByteArray &pk, QByteArray &essid);
     bool probe_response(const QByteArray &pk, QByteArray &essid);
 
